{"version":3,"sources":["dev/es6/tests/main-spec.js"],"names":[],"mappings":";;;;;KAAO,GAAG;;KACH,UAAU;;KACV,EAAE;;KACF,CAAC;;KACD,QAAQ;;KACR,KAAK;;AAEZ,SAAQ,CAAE,cAAc,EAAE,YAAW;AACpC,cAAY,CAAC;;AAEb,YAAU,CAAE,YAAW;;;;;;AAMtB,IAAC,CAAE,MAAM,CAAE,CAAC,MAAM,CAAE,sDAAkD,CAAE,CAAC;AACzE,IAAC,CAAE,WAAW,CAAE,CAAC,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAE,CAAE,CAAC;;;AAGvE,OAAI,YAAY,YAAA,CAAC;AACjB,OAAI,CAAC,GAAG,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;AACzC,OAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAG;AACvC,gBAAY,GAAG,OAAO,CAAC;IACvB,CAAC;AACF,IAAC,CAAC,IAAI,EAAE,CAAC;AACT,eAAY,CAAC,OAAO,CACnB,GAAG,EACH,EAAE,cAAc,EAAG,kBAAkB,EAAE,EACvC,6BAAyB,CACzB,CAAC;GACF,CAAE,CAAC;;AAEJ,WAAS,CAAE,YAAW;AACrB,IAAC,CAAE,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;AAC1B,OAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;GACnB,CAAE,CAAC;;AAEJ,IAAE,CAAE,kCAAkC,EAAE,YAAW;AAClD,SAAM,CAAE,GAAG,YAAY,UAAU,CAAC,WAAW,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;GAC7D,CAAE,CAAC;;AAEJ,IAAE,CAAE,8BAA8B,EAAE,YAAW;AAC9C,SAAM,CAAE,GAAG,CAAC,QAAQ,CAAE,CAAC,WAAW,EAAE,CAAC;GACrC,CAAE,CAAC;;;;;;EAOJ,CAAE,CAAC","file":"dev/es6/tests/main-spec.js","sourcesContent":["import App from 'app';\nimport Marionette from 'marionette';\nimport jj from 'jasmine-jquery';\nimport $ from 'jquery';\nimport fixtures from 'fixtures';\nimport sinon from 'sinon';\n\ndescribe( 'main-spec.js', function() {\n\t'use strict';\n\n\tbeforeEach( function() {\n\t\t// Note don't use the fat arrow function if you want to\n\t\t// use `this` for passing vars. And trust me, you do.\n\t\t// http://jasmine.github.io/2.0/introduction.html#section-The_<code>this</code>_keyword\n\n\t\t// add a handlebars fixture to your spec-runner this way\n\t\t$( 'body' ).append( '<div id=\"fixtures\" style=\"display: none;\"></div>' );\n\t\t$( '#fixtures' ).append( fixtures.main( { content: 'Foo for you' } ) );\n\n\t\t// fake XMLHttpRequest with Sinonjs\n\t\tlet fetchRequest;\n\t\tthis.xhr = sinon.useFakeXMLHttpRequest();\n\t\tthis.xhr.onCreate = function( request ) {\n\t\t\tfetchRequest = request;\n\t\t};\n\t\t$.ajax();\n\t\tfetchRequest.respond(\n\t\t\t200,\n\t\t\t{ \"Content-Type\" : \"application/json\" },\n\t\t\t'{ \"key\" : \"fakeValue\" }'\n\t\t);\n\t} );\n\n\tafterEach( function() {\n\t\t$( '#fixtures' ).detach();\n\t\tthis.xhr.restore();\n\t} );\n\n\tit( 'creates a Marionette Application', function() {\n\t\texpect( App instanceof Marionette.Application ).toBe( true );\n\t} );\n\n\tit( 'app has a backbone attribute', function() {\n\t\texpect( App.backbone ).toBeDefined();\n\t} );\n\n\t// it( 'backbone.history to have started', function() {\n\t// \tApp.start();\n\t// \texpect( App.backbone.History.started ).toBe( true );\n\t// } );\n\n} );\n"]}